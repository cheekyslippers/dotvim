UVM Language Interview Questions
=================================

Please answer the following questions to the best of your ability

1.  What is wrong with the following UVM test code?

  my_seq_item     item_a;

  item_a.field_1 = 10;
  item_a.field_2 = 20;
  item_a.field_3 = 30;

  item_a.do_print();



2.  What code would register the following class with the UVM factory?

   class  my_driver extends uvm_driver(#my_seq_item);
      logic  signal_a;
      logic  signal_b;
      logic  signal_c;
      bit    clk;
      bit    resetn;


      ....
   endclass;


3.  Complete the driver class in (2) with the transaction from (1) assuming:
   - signal_a = field_1 + field_2
   - signal_b = field_2
   - if field_2 is larger than 25 then signal_c = field_3 otherwise signal_c = field_1




4.  What is the most accepted method of connecting the Driver signals to the
DUT? Write how you would do this.




5.  Write a UVM Sequence Item called my_seq_item that could be used for my_transaction with:
     field_1  :  valid ranges from 0 to 100
     field_2  :  valid ranges 10 to 50 inclusive in steps of 10
     field_3  :  the result of field_1 + field_2




6.  Given the following sequencer, complete the UVM agent for the given components:

   class my_sequencer extends uvm_sequencer #(my_seq_item);
      <uvm_registration_code>
      <constructor>
   endclass;

   class my_agent extends uvm_agent;
      my_driver      drv1;
      my_sequencer   seq1;

      ...
   endclass


7.  What other components might typically be added to this agent?



8.  What are the different levels of UVM message severity and what is
    their purpose?




9.  What is the difference between a System Verilog task and a
    System Verilog function?




10.  Write a pure virtual function declaration called "calc_depth" that
     returns an integer, given 2 integer inputs, to be included in the
     driver of question (2) above


11.  What is the UVM config database and how might it be useful?
